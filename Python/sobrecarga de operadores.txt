Básicamente, la sobre carga de un operador significa
que un mismo operador puede comportarse de 
diferentes formas.
Por ejemplo, el operador de suma(+)
El operador de suma es un un ejemplo
de la sobrecarga de operadores.
Este operador se puede comportar de maneras distintas 
dependiendo si esta trabajando con tipos string,
con tipo entero o por ejemplo con tipo lista.
Asi que dependiendo con el tipo con el que este trabajando, 
es el tipo de resultado que vamos a obtener.
Por lo tanto un mismo operador puede trabajar de distintas 
formas. 
Esto se conoce como sobrecarga de operadores.
caso 1                         caso 2
a = 2                          a = 'Hola'
b= 3                           b = 'Mundo' 
print(a +b)                    print(a + b)

En ese segundo caso, en lugar de obtener una suma, obtenemos
una concatenación de tipo string de tipo cadena, y entonces  
se comporta de otra forma
Agregamos una listas:
a = [3,4,5]
b = [6,7,8,9]
print(a + b) 
se ca a comportar de manera diferente, obtenemos la union de ls dos listas creando una sola 
Es el mismo operador, pero dependiendo del tipo de dato cin el que 
estamos trabajando va a ser el resultado 
Ahora la pregunta es si esto mismo lo podemos hacer con 
clases en python
y la respuesta es qu si pero tenemos que agregar la cobrecarga de un metodo 
dpendiendo del operador que queramos sobrecargar.
por ejemplo ,esta es la lista de metodos segun el operador que 
queramos sobrecargar.
Todos estan definidos en la clase object
   Operadores Aritmeticos          magic method

+                                   __add__(self, other)
-                                   __sub__(self, other)
*                                   __mul__(self, other)
/                                   __truediv__(self, other)

//                                  __floordiv__(self,other)
%                                   __mod__(self, other)
**                                  __pow__(self, other)                        
